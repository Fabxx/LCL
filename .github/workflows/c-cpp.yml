name: CI/CD Pipeline for LCL

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Determine tag
      id: tag
      run: |
        git pull --rebase origin main
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        COMMIT_COUNT=$(git rev-list ${LAST_TAG}..HEAD --count)

        BASE_VERSION=2.0
        COMMIT_HASH=$(git rev-parse --short HEAD)

        if [[ $COMMIT_COUNT -ge 100 ]]; then
          NEW_TAG="v${BASE_VERSION}-${COMMIT_HASH}"
        else
          NEW_TAG=$LAST_TAG
        fi

        echo "TAG_NAME=$NEW_TAG" >> $GITHUB_ENV

    - name: Create or update Git tag
      run: |
        git tag -f ${{ env.TAG_NAME }}
        git push -f origin ${{ env.TAG_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake zip

    - name: Build for Linux
      run: |
        chmod +x ./build_all.sh
        ./build_all.sh

        mkdir -p Linux/cores
        cp build/*.so Linux/cores || true
        cp -r info Linux/ || true

    - name: Create ZIP archive for Linux
      run: zip -r Retro_Launchers_Win64.zip Linux

    - name: Upload Linux ZIP release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG_NAME }}
        files: "Retro_Launchers_Linux_amd64.zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Determine tag
      id: tag
      run: |
        git pull --rebase origin main
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        COMMIT_COUNT=$(git rev-list ${LAST_TAG}..HEAD --count)

        BASE_VERSION=0.0.2
        COMMIT_HASH=$(git rev-parse --short HEAD)

        if [[ $COMMIT_COUNT -ge 100 ]]; then
          NEW_TAG="v${BASE_VERSION}-${COMMIT_HASH}"
        else
          NEW_TAG=$LAST_TAG
        fi

        echo "TAG_NAME=$NEW_TAG" >> $GITHUB_ENV
      shell: bash

    - name: Create or update Git tag
      run: |
        git tag -f ${{ env.TAG_NAME }}
        git push -f origin ${{ env.TAG_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: >-
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-make
          base-devel
        update: true

    - name: Build for Windows
      shell: msys2 {0}
      run: |
        chmod +x ./build_all.sh
        ./build_all.sh

        mkdir -p Windows/cores
        cp build/*.dll Windows/cores || true
        cp -r info Windows/ || true

    - name: Create ZIP archive for Windows
      run: |
        Compress-Archive -Path Windows -DestinationPath Retro_Launchers_Win64.zip

    - name: Upload Windows ZIP release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG_NAME }}
        files: "Retro_Launchers_Win64.zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Determine tag
      id: tag
      run: |
        git pull --rebase origin main
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        COMMIT_COUNT=$(git rev-list ${LAST_TAG}..HEAD --count)

        BASE_VERSION=0.0.2
        COMMIT_HASH=$(git rev-parse --short HEAD)

        if [[ $COMMIT_COUNT -ge 100 ]]; then
          NEW_TAG="v${BASE_VERSION}-${COMMIT_HASH}"
        else
          NEW_TAG=$LAST_TAG
        fi

        echo "TAG_NAME=$NEW_TAG" >> $GITHUB_ENV
      shell: bash

    - name: Create or update Git tag
      run: |
        git tag -f ${{ env.TAG_NAME }}
        git push -f origin ${{ env.TAG_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install dependencies
      run: |
        brew install cmake ninja zip

    - name: Build for macOS
      run: |
        chmod +x ./build_all.sh
        ./build_all.sh

        mkdir -p MacOS/cores
        cp build/*.dylib MacOS/cores || true
        cp -r info MacOS/ || true

    - name: Create ZIP archive for macOS
      run: zip -r Retro_Launchers_macOS_x86_64.zip MacOS
    
    - name: Upload macOS ZIP release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG_NAME }}
        files: "Retro_Launchers_macOS_x86_64.zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
